knitr::opts_chunk$set(echo = TRUE)
# Cargar librerías necesarias
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(dplyr)
library(randomForest)
library(pdp)
library(readr)
library(viridis)
# Cargar librerías necesarias
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(dplyr)
library(randomForest)
library(pdp)
library(readr)
library(viridis)
# Cargar librerías necesarias
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(dplyr)
library(randomForest)
library(pdp)
library(readr)
library(viridis)
# Cargar librerías necesarias
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(dplyr)
library(randomForest)
library(pdp)
library(readr)
library(viridis)
knitr::opts_chunk$set(echo = TRUE)
# Cargar el dataset de día
day <- read_csv("/Users/rustam/Documents/GitHub/Practica_ud5/day.csv")
day$yr <- as.factor(day$yr)
day$season <- as.factor(day$season)
day$weathersit <- as.factor(day$weathersit)
View(day)
# Cargar el dataset de día
day <- read_csv("/Users/rustam/Documents/GitHub/Practica_ud5/day.csv")
day$yr <- as.factor(day$yr)
day$season <- as.factor(day$season)
day$weathersit <- as.factor(day$weathersit)
knitr::opts_chunk$set(echo = TRUE)
# Cargar el dataset de día
day <- read_csv("/Users/rustam/Documents/GitHub/Practica_ud5/day.csv", show_col_types = FALSE)
day$yr <- as.factor(day$yr)
day$season <- as.factor(day$season)
day$weathersit <- as.factor(day$weathersit)
# Entrenar modelo Random Forest para predecir 'cnt'
set.seed(123)
rf_bike <- randomForest(cnt ~ ., data = day %>% select(cnt, temp, hum, windspeed, instant), ntree = 200)
# Generar PDPs 1D para las variables especificadas
pdp_temp <- partial(rf_bike, pred.var = "temp")
pdp_hum <- partial(rf_bike, pred.var = "hum")
pdp_wind <- partial(rf_bike, pred.var = "windspeed")
pdp_instant <- partial(rf_bike, pred.var = "instant") # días desde 2011
# Graficar los PDPs
autoplot(pdp_temp) + ggtitle("PDP: Temperatura")
autoplot(pdp_hum) + ggtitle("PDP: Humedad")
autoplot(pdp_wind) + ggtitle("PDP: Velocidad del viento")
autoplot(pdp_instant) + ggtitle("PDP: Días desde 2011")
knitr::opts_chunk$set(echo = TRUE)
# Submuestreo para evitar problemas de rendimiento
set.seed(456)
bike_sample <- day %>% select(temp, hum, cnt) %>% sample_n(500)
# Entrenar nuevo modelo solo con temp y hum
rf_bike2 <- randomForest(cnt ~ temp + hum, data = bike_sample, ntree = 200)
# Generar PDP 2D
pdp_2d <- partial(rf_bike2, pred.var = c("temp", "hum"), grid.resolution = 20)
# Visualizar con geom_tile y viridis
ggplot(pdp_2d, aes(temp, hum, fill = yhat)) +
geom_tile(width = 0.02, height = 0.02) +
scale_fill_viridis_c() +
labs(title = "PDP 2D: cnt ~ temp + hum", x = "Temperatura", y = "Humedad") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Cargar el dataset de casas
kc <- read_csv("/Users/rustam/Documents/GitHub/Practica_ud5/kc_house_data.csv", show_col_types = FALSE)
